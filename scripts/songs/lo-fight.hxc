import flixel.FlxG;
import funkin.graphics.FunkinSprite;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.play.PlayState;
import funkin.play.PlayStatePlaylist;
import funkin.play.song.Song;

class WhittyLoFightSong extends Song {
    var hasPlayedCutscene:Bool;
    public function new() {
        super('lo-fight');
    }

    function onCreate(event:ScriptEvent):Void {
        super.onCreate(event);

        hasPlayedCutscene = false;
    }

    function onSongRetry(event:ScriptEvent) {
        super.onSongRetry(event);

        hasPlayedCutscene = true;
    }

    public function onCountdownStart(event:CountdownScriptEvent):Void {
        super.onCountdownStart(event);

        // I know there's a better way to structure this
        // The girl I love doesn't wanna talk w me, i'm crying while writting this- :u
        // but hey, PICO UPDATE *INSERT FIRE*, I'm depressed but happy :'D
        var isPico = (PlayState.instance.currentVariation == 'pico');

        if (!(PlayStatePlaylist.isStoryMode || isPico) || PlayState.instance.isChartingMode || hasPlayedCutscene) {
            return;
        }

        hasPlayedCutscene = true;
        event.cancel();
        if (PlayStatePlaylist.isStoryMode || isPico) {
            startCutscene(isPico);
        }
    }

    function startDialogue(?isPico:Bool = false) {
        var dialogue = 'lo-fight' + (isPico ? '-pico' : '');
        PlayState.instance.camCutscene.fade(0xFF000000, 1.3, true, () -> {
            PlayState.instance.isInCutscene = false;
            PlayState.instance.mayPauseGame = true;
            PlayState.instance.startConversation(dialogue);
        }, true);
    }

    public override function onDialogueEnd() {
        Countdown.performCountdown();
    }

    function startCutscene(?holasoypicoyesteesmibanio:Bool = false) {
        trace('funny lo-fight Cutscene :o!!!');

        // --- Variables setup
        PlayState.instance.isInCutscene = true;
        PlayState.instance.mayPauseGame = false;

        var isPico = holasoypicoyesteesmibanio; // sorry for this line i had to make a reference :u
        var whitty = PlayState.instance.currentStage.getDad();
        var player = PlayState.instance.currentStage.getBoyfriend();

        if (whitty == null || player == null) { // Just in case
            PlayState.instance.isInCutscene = false;
            PlayState.instance.mayPauseGame = true;
            return;
        }

        var whittyCamPosX = whitty.getMidpoint().x - (FlxG.onMobile ? -60 : 40);
        var whittyCamPosY = whitty.getMidpoint().y - 340;
        var bfCamPosX = whitty.getMidpoint().x + 400; 
        var bfCamPosY = whitty.getMidpoint().y - (FlxG.onMobile ? 300 : 200);

        var playerCutOffset:Int = 454;
        if (FlxG.onMobile) playerCutOffset = 684;
        if (isPico) playerCutOffset += 160;

        // --- Assets prep
        var city = FunkinSound.load(Paths.sound('cutsceneWhitty/city'), 1.0, true);
        var rip = FunkinSound.load(Paths.sound('cutsceneWhitty/rip'), 1.0, false);
        var fire = FunkinSound.load(Paths.sound('cutsceneWhitty/fire'), 1.0, false);
        var daPresentationShit = FunkinSound.load(Paths.sound('cutsceneWhitty/' + (isPico ? "picoCoolShit" : "beepboop")), 1.0, false);

        // --- Setting up cutscene
        city.fadeIn();

        PlayState.instance.cameraFollowPoint.setPosition(whittyCamPosX + 80, whittyCamPosY); // giving a little "tween" effect
        PlayState.instance.tweenCameraToFollowPoint(0);
        PlayState.instance.cameraFollowPoint.setPosition(whittyCamPosX, whittyCamPosY);

        PlayState.instance.camHUD.visible = false;

        PlayState.instance.currentStage.getGirlfriend().visible = false;
        player.x += playerCutOffset;

        // --- Helpers
        function startChit() {
            whitty.playAnimation("cutscene", true);

            whitty.animation.onFrameChange.add(onBurpBeepWhittying);
            whitty.animation.onFinish.add(onBurpBeepStoppingShit);
        }

        function onBurpBeepWhittying(name:String, frameNumber:Int, frameIndex:Int) {
            if (name != "cutscene") return;

            switch(frameNumber)
            {
                case 0:
                    trace('play city sounds');
                case 41:
                    trace('fire');
                    if (!fire.playing) fire.play();
                case 34:
                    trace('paper rip');
                    if (!rip.playing) rip.play();
                case 147:
                    trace('daPresentationShit');
                    if (!daPresentationShit.playing) {
                        PlayState.instance.cameraFollowPoint.setPosition(bfCamPosX, bfCamPosY);
                        daPresentationShit.play();
                        player.playAnimation('sing' + (isPico ? "RIGHT" : "LEFT"), true);
                    }
                case 152:
                    if (!isPico) return; // Only for pico
                    trace('pico Special chit');
                    player.playAnimation('singRIGHT', true);
                case 154: // bf idle
                    if (!isPico && player.getCurrentAnimation() != 'idle') player.playAnimation('idle');
                case 160: // pico idle
                    if (isPico && player.getCurrentAnimation() != 'idle') player.playAnimation('idle');
            }
        }

        function onBurpBeepStoppingShit(name:String) {
            if (name != "cutscene") return;

            PlayState.instance.camCutscene.fade(0xFF000000, 1, false, function() {
                whitty.animation.onFrameChange.remove(onBurpBeepWhittying);
                whitty.animation.onFinish.remove(onBurpBeepStoppingShit);
                whitty.playAnimation("idle", true);

                PlayState.instance.currentStage.getGirlfriend().visible = true;
                player.x -= playerCutOffset;

                city.fadeOut();
                startDialogue(isPico);
            }, true);
        }

        // --- Actual cutscene
        startChit();
        PlayState.instance.camCutscene.fade(0xFF000000, 1.5, true, null, true);
    }
}